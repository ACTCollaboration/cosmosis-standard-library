# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  conda_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies with conda
      run: |
        $CONDA/bin/conda init bash
        $CONDA/bin/conda create -p ./env -c conda-forge python==3.9 cosmosis cosmosis-build-standard-library

    - name: Build standard library
      run: |
        $CONDA/bin/conda activate ./env
        source cosmosis-configure
        make

    - name: Pantheon emcee
      run: |
        $CONDA/bin/conda activate ./env
        source cosmosis-configure
        cosmosis examples/pantheon.ini -p emcee.samples=20
        cosmosis-postprocess examples/pantheon.ini -o output/pantheon
        test -f output/pantheon/cosmological_parameters--omega_m.png

    - name: DES Y1 likelihood
      run: |
        $CONDA/bin/conda activate ./env
        source cosmosis-configure
        cosmosis examples/des-y1.ini | tee output/des-y1.log
        grep 'Likelihood =  5237.37' output/des-y1.log


  apt-get-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install apt dependencies
      run: |
        sudo apt-get update
        sudo apt-get -y install gfortran-7 swig libopenmpi-dev openmpi-bin libopenblas-dev
        sudo ln -s `which gfortran-7` /usr/local/bin/gfortran
        sudo apt-get -y install libgsl-dev libfftw3-bin libfftw3-dev libfftw3-3 autotools-dev  autoconf libcfitsio-dev


    - uses: actions/cache@v2
      name: Load pip cache
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/setup.py') }}

    - uses: actions/cache@v2
      name: Planck Data Cache
      id: cache-planck
      with:
        path: likelihood/planck2018/baseline
        key: ${{ runner.os }}-planck-2018

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cosmosis
        pip install --no-binary=mpi4py mpi4py
        pip install camb fitsio astropy fast-pt

    - name: Build
      run: |
        source .github/ci-setup.sh && make

    - name: Download Planck 2018 Data
      if: steps.cache-planck.outputs.cache-hit != 'true'
      run: |
          cd likelihood/planck2018
          curl "http://pla.esac.esa.int/pla/aio/product-action?COSMOLOGY.FILE_ID=COM_Likelihood_Data-baseline_R3.00.tar.gz" -o COM_Likelihood_Data-baseline_R3.00.tar.gz
          tar -zxvf COM_Likelihood_Data-baseline_R3.00.tar.gz

    - name: Demo 2 Planck 2018 Likelihood
      run: |
        source .github/ci-setup.sh
        cosmosis demos/demo2.ini
        cosmosis-postprocess demos/demo2.ini -o output/demo2
        test -f output/demo2/comoving_distance.png
        python .github/ci-checks.py


    - name: Demo 9 Low-Resolution Multinest
      run: |
        source .github/ci-setup.sh
        cosmosis demos/demo9.ini -p multinest.live_points=100
        cosmosis-postprocess output/demo9.txt -o output/demo9
        test -f output/demo9/2D_supernova_params--deltam_cosmological_parameters--omega_m.png

    # - name: DES Y3 likelihood
    #   run: |
    #     source .github/ci-setup.sh
    #     #cosmosis examples/des-y3.ini